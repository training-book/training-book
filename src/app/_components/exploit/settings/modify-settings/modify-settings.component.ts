import { NgIf } from '@angular/common';
import { Component, Input, OnInit } from '@angular/core';
import { AbstractControl, FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';
import { IonicModule, ModalController } from '@ionic/angular';
import Validation from 'src/app/_helpers/password.validation';

@Component({
  selector: 'app-modify-settings',
  templateUrl: './modify-settings.component.html',
  styleUrls: ['./modify-settings.component.scss'],
  standalone: true,
  imports: [
    IonicModule,
    NgIf,
    FormsModule,
    ReactiveFormsModule,
  ]
})

export class ModifySettingsComponent implements OnInit {

  @Input() params: any;
  passwordForm: FormGroup = new FormGroup(
    {
      lastPassword: new FormControl<string>('', [
        Validators.required,
        // Validators.minLength(8),
        // Validators.maxLength(32),
        // Validators.pattern(upperLowerSymbolNumberRegex),
      ]),
      newPassword: new FormControl<string>('', [
        Validators.required,
        Validators.minLength(8),
        Validators.maxLength(32),
        Validators.pattern(Validation.upperLowerSymbolNumberRegex),
      ]),
      confirmNewPassword: new FormControl<string>('', [
        Validators.required,
      ]),
    },
    {
      validators : Validation.passwordMatch('newPassword', 'confirmNewPassword')
    }
  );
  constructor(private modalControl: ModalController) { }

  ngOnInit() { }

  get formControls(): { [key: string]: AbstractControl } {
    return this.passwordForm.controls;
  }

  changePassword() {
    console.log('Ã§a fonctionne')
    console.log(this.passwordForm)
  }

  changeEmail() {
  }

  closeModal() {
    this.modalControl.dismiss({
      userAction: "back"
    })
  }
}
